/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0ms\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 210000.0;
	SIMULATION_TIME = 210000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 100.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("pen")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pen[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pen";
}

SIGNAL("pen[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pen";
}

SIGNAL("pen[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pen";
}

SIGNAL("pen[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pen";
}

SIGNAL("vde")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hde")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("de")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("r")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("r[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r";
}

SIGNAL("r[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r";
}

SIGNAL("g")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("g[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "g";
}

SIGNAL("g[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "g";
}

SIGNAL("b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("b[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "b";
}

SIGNAL("b[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "b";
}

SIGNAL("hs")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("vs")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("divider 857")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("divider 1824")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("divider 2284")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk54m")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("rst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("pen[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210000.0;
	}
}

TRANSITION_LIST("pen[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 4199;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("pen[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 4199;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("pen[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 4199;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("vde")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 48605.0;
		LEVEL 1 FOR 161395.0;
	}
}

TRANSITION_LIST("hde")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8605.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 8000.0;
		}
		LEVEL 1 FOR 1395.0;
	}
}

TRANSITION_LIST("de")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 48605.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 8000.0;
		}
		LEVEL 1 FOR 1395.0;
	}
}

TRANSITION_LIST("r[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 49705.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 4300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 19000.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 4300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 18100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1600.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 2100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 800.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 14900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1600.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 2100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 800.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 14800.0;
		LEVEL 1 FOR 700.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 95.0;
	}
}

TRANSITION_LIST("r[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 48605.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 25600.0;
			LEVEL 0 FOR 14400.0;
		}
		LEVEL 1 FOR 1395.0;
	}
}

TRANSITION_LIST("g[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 49705.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 4300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 19000.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 4300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 18100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1600.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 2100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 800.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 14900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1600.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 2100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 800.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 14800.0;
		LEVEL 1 FOR 700.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 95.0;
	}
}

TRANSITION_LIST("g[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 48605.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 25600.0;
			LEVEL 0 FOR 14400.0;
		}
		LEVEL 1 FOR 1395.0;
	}
}

TRANSITION_LIST("b[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 48605.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 25600.0;
			LEVEL 0 FOR 14400.0;
		}
		LEVEL 1 FOR 1395.0;
	}
}

TRANSITION_LIST("b[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 48605.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 25600.0;
			LEVEL 0 FOR 14400.0;
		}
		LEVEL 1 FOR 1395.0;
	}
}

TRANSITION_LIST("hs")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1405.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 4800.0;
			LEVEL 0 FOR 35200.0;
		}
		LEVEL 1 FOR 4800.0;
		LEVEL 0 FOR 3795.0;
	}
}

TRANSITION_LIST("vs")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210000.0;
	}
}

TRANSITION_LIST("clk54m")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 21000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("rst")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 209850.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "rst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk54m";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pen";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6;
}

DISPLAY_LINE
{
	CHANNEL = "pen[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "pen[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "pen[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "pen[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "divider 857";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "vde";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hde";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "de";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "divider 1824";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "r";
	EXPAND_STATUS = EXPANDED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "r[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "r[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "g";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "g[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "g[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "b[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "b[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "divider 2284";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "hs";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "vs";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 26000;
	MASTER = TRUE;
}
;
